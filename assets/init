#!/bin/bash

DOCKERHOST=$(ip route show | grep -e ^default | awk -F" " '{ print $3 }')

##
## setup defaults
##
SETUP_DIR="/app/setup"

## work in progress to source out mysql. not yet functional
DB_TYPE=${DB_TYPE:-mysql}
DB_HOST=${DB_HOST:-localhost}
DB_PORT=${DB_PORT:-3306}
DB_POOL=${DB_POOL:-10}
DB_ROOT=${DB_ROOT:-root}
DB_PASS=${DB_PASS:-}

VUFIND_HOME="/usr/local/vufind2"
VUFIND_DB=${VUFIND_DB:-local}
VUFIND_SOLR=${VUFIND_SOLR:-local}

LOG_DIR="/var/log"

_adaptUid() {
    # adapt vufind2 uid
    VUFIND_UID=`ls -lnd ${VUFIND_HOME} | awk -F" " '{ print $3 }'`
    VUFIND_GID=`ls -lnd ${VUFIND_HOME} | awk -F" " '{ print $4 }'`

    sed -e "s!^\(vufind2:x\):[0-9]\+:[0-9]\+:\(.*\)\$!\1:${VUFIND_UID}:${VUFIND_GID}:\2!" -i /etc/passwd
    sed -e "s!^\(vufind2:x\):[0-9]\+:\(.*\)\$!\1:${VUFIND_GID}:\2!" -i /etc/group

    chown vufind2:vufind2 /home/vufind2 /var/www/fcgid /usr/local/webgrind /var/lib/xdebug -R
}

_setupVufind () {
    su -l vufind2 -c "php /usr/local/vufind2/install.php $(printf " %q" "$@")"
}

_setupRuntime() {
    # set up what has to be set up
    for i in `ls -A ${SETUP_DIR}`; do
        echo "Setting up $i..."
        source "${SETUP_DIR}/$i"
    done
}

case "$1" in
    run)
        echo "Setting up owner/group of vufind2..."
        _adaptUid

        echo "Setting up runtime environment..."
        _setupRuntime

        echo "Starting supervisord..."
        /usr/bin/supervisord -c /etc/supervisor/supervisord.conf

        # start mysql server, if its on localhost
        if [ "${VUFIND_DB}" == "local" ]; then
            echo "Starting MySQL..."
            /usr/bin/supervisorctl start mysqld
        fi;

        if [ "${VUFIND_SOLR}" == "local" ]; then
            echo "Starting Vufind2 Solr..."
            /usr/bin/supervisorctl start solr

        fi;

        /usr/bin/supervisorctl maintail -f
        ;;
    install)
        # strip the scriptname and the script parameter and give the rest to
        shift 2
        _setupVufind $@
        ;;
    interactive)
        su -l vufind2
        ;;
    *)
    echo "unrecognized command: $i";
    ;;
esac

exit 0